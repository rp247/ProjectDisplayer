#
# CSE186 Assignment 8 Backend
#

openapi: '3.0.3'

info:
  description: Project Displayer Backend
  version: 0.1.0
  title: Project Displayer Backend

servers:
  - url: http://localhost:3010/v0

paths:
  /login:
    post:
      description: Login
      requestBody:
        description: Request Body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credentials'
      responses:
        200:
          description: Login Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedError'
  
  /signup:
    post:
      description: Signup
      requestBody:
        description: Request Body
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Credentials'
                - type: object
                  properties:
                    name:
                      type: string
                    avatar:
                      type: string
                  required:
                    - name
                    - avatar
      responses:
        200:
          description: Login Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        409:
          description: User already exists
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              
                

components:
  schemas:
    Error:
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
      required:
        - code
        - message

    UnexpectedError:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    User:
      type: object
      properties:
        name:
          type: string
        accessToken:
          type: string
        avatar:
          type: string
      required:
        - name
        - accessToken
        - avatar

    Credentials:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password

  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes